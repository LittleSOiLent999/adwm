.Dd $Mdocdate$
.Dt ADWM-STYLE \&5 "File Formats"
.Os @PACKAGE@ @VERSION@
.Sh NAME
.Nm @PACKAGE@-style
.Nd advanced dynamic window manager for X: styles
.Sh SYNOPSIS
.Bl -item -compact
.It
.Pa ~/.adwm/stylerc
.It
.Pa ~/.adwm/styles/Default/stylerc
.It
.Pa @pkgconfdir@/stylerc
.It
.Pa @pkgconfdir@/styles/Default/stylerc
.El
.Sh DESCRIPTION
.Nm @PACKAGE@
is a light-weight, re-parenting, dynamic tiling/stacking window manager,
intended on being fully controllable using only the keyboard: the
objective of all dynamic tiling window managers.  However,
.Nm @PACKAGE@
also supports regular stacking floating window management as well, and
decorative frames are applied to windows in a number of circumstances:
the window is
.Pp
.Bl -enum -compact
.It
fixed (i.e. it must float);
.It
displayed in a floating layout;
.It
maximized and
.Cm decoratemax
is set for the view;
.It
viewed with
.Cm decoratetiled
set.
.El
.Pp
Decorative window borders can contain title text as well as buttons
(defined as pixmaps) that can perform a number of predefined actions on
the window around which they appear.  Customizable style elements exist
to determine which pixmaps are displayed and under which conditions.
Also,
.Nm @PACKAGE@
directly supports a Window Maker style
.Dq dock .
Window Maker dock applications are re-parented into tiles within the
dock.
.Pp
To control the styling of the decorative border, title bar, resize
grips and dock tiles,
.Nm @PACKAGE@
supports customizable style elements.
Customizable style elements are defined in an X Resource formatted
configuration file.  Styles can either be part of the main configuration
file, or they can be included or referenced from the main configuration
file.  It is typical to place the style elements in a file named
.Pa stylerc
in the same directory as the main configuration file (e.g. in the
.Pa ~/.adwm/stylerc
file).  See
.Sx FILES ,
below.
.Sh SYNTAX
The general syntax of style elements, as specified directly in
the
.Nm @PACKAGE@
resource file, is as follows:
.Pp
.Dl Adwm* Ns Cm element Ns Li : Ar <value>
.Pp
Where the fields are defined as follows:
.Pp
.Bl -tag -width "XX"
.It Cm element
One of the elements described under
.Sx ELEMENTS .
.It Ar <value> Li = Li { Ns Ar <pixmap> Ns Li | Ns Ar <font> Ns Li | Ns Ar <color> Ns Li | Ns Ar <number> Ns Li | Ns Ar <string> Ns Li | Ns Ar <bool> Ns Li }
The value depends on the element that is specified.  Typically the
value is a path and name of a pixmap file, an X11 true-type or
bitmapped font specification, an X11 color specification, a number, a
string, a boolean, or a specially formatted value as follows:
.Pp
.Bl -tag -width "XXXXXXXX"
.It Ar <pixmap>
Pixmaps are specified with a full or relative path and file name.  When
the path is relative, it is relative to the directory in which the
style file resides.
.Pp
Example:
.Li Adwm* Ns Cm button.iconify.pixmap Ns Li : Pa pixmaps/min_focused.xpm
.It Ar <font>
Fonts are specified with an Fontconfig pattern string or an X Logical
Font Description (XFLD) formatted font specification string.  See
.Xr FcParseName 3
and
.Xr xft 3 .
.Pp
Example:
.Li Adwm* Ns Cm normal.font Ns Li : Ar "Liberation Sans:size=9:medium"
.It Ar <color>
Colors are specified as X resource colors.  This can be a color name or
color specification.  For the possible format of colors, see
.Xr XParseColor 3 .
.Pp
Example:
.Li Adwm* Ns Cm selected.shadow Ns Li : Ar #394870
.It Ar <number>
A decimal number.
.Pp
Example:
.Li Adwm* Ns Cm title Ns Li : Ar 15
.It Ar <string>
A specially formatted string as specified by the element definition.
.Pp
Example:
.Li Adwm* Ns Cm titlelayout Ns Li : Ar "EFASLN  RIMC"
.It Ar <bool>
A boolean value taking either zero (0) or one (1) as an argument.
.Pp
Example:
.Li Adwm* Ns Cm dectiled Ns Li : Ar 0
.El
.El
.Sh ELEMENTS
.Pp
The style elements are defined below.  Each heading provides the
format of the command resource (without the
.Li \(lqAdwm*\(rq
portion) and the possible arguments for each element, in accordance
with the element syntax described above under
.Sx SYNTAX .
.Ss TITLE-BAR STYLE ELEMENTS
.Cm @PACKAGE@
has a number of title-bar style elements that can be used to theme the
decorative border that may be placed around client windows.  Some
settings (such as backgrounds) are also applicable to the dock.
.Bl -tag -width "XX"
.It Cm font Ar <font>
Specifies the font to be used for title bar text.
.Pp
Example:
.Li Adwm* Ns Cm font Ns Li : Ar "Liberation Sans:size=8:medium"
.It Cm border Ar <pixels>
Specifies the number of pixels,
.Ar <pixels> ,
of border that surrounds the title bar,
resize grips and dock application tiles.
Typically set to one (1).
.Pp
Example:
.Li Adwm* Ns Cm border Ns Li : Ar 1
.It Cm margin Ar <pixels>
Specifies the number of pixels,
.Ar <pixels> ,
to use as a margin between the title bar
elements and the title bar border.
Typically set to zero (0) to conserve screen real estate.
.Pp
Example:
.Li Adwm* Ns Cm margin Ns Li : Ar 0
.It Cm outline Ar <pixels>
Specifies the number of pixels,
.Ar <pixels> ,
to use to outline the title bar and
resize grips.
Typically set to one (1).
.Pp
Example:
.Li Adwm* Ns Cm outline Ns Li : Ar 1
.It Cm spacing Ar <pixels>
Specifies the number of pixels,
.Ar <pixels> ,
to be used between title bar elements.
.Pp
Example:
.Li Adwm* Ns Cm spacing Ns Li : Ar 1
.It Cm title Ar <pixels>
Specifies the height of the title bar in pixels,
.Ar <pixels> .
.Pp
Example:
.Li Adwm* Ns Cm title Ns Li : Ar 15
.It Cm grips Ar <pixels>
Specifies the height of the resize grips in pixels,
.Ar <pixels> .
.Pp
Example:
.Li Adwm* Ns Cm grips Ns Li : Ar 3
.It Cm <windowstate>.<element> Ar <value>
Specifies the style elements for the title bar, title, buttons and
resize grips in one of two possible states (normal and selected).
.Pp
.Cm <windowstate>
can be one of:
.Bl -tag -width ".Cm selected" -compact -offset indent
.It Cm normal
the window is in the normal state; or,
.It Cm selected
the window is in the selected state.
.El
.Pp
.Cm <element>
can be one of:
.Bl -tag -width ".Cm shadow Ar <color>" -compact -offset indent
.It Cm font Ar <font>
font for the title;
.It Cm drop Ar <number>
drop in pixels of the shadow;
.It Cm shadow Ar <color>
color of the shadow;
.It Cm border Ar <color>
color of the border;
.It Cm button Ar <color>
background color of buttons;
.It Cm bg Ar <color>
background color of title bar and grips;
.It Cm fg Ar <color>
foreground color of the title.
.El
.Pp
.Sy Note:
The
.Cm border ,
.Cm bg
and
.Cm fg
style elements also apply to dock application tiles.
.Pp
Example:
.Dl Adwm* Ns Cm selected.font Ns Li : Ar "  Liberation Sans:size=9:medium"
.Dl Adwm* Ns Cm selected.drop Ns Li : Ar "  1"
.Dl Adwm* Ns Cm selected.shadow Ns Li : Ar "#394870"
.Dl Adwm* Ns Cm selected.border Ns Li : Ar "#5369a3"
.Dl Adwm* Ns Cm selected.button Ns Li : Ar "#f0f0f0"
.Dl Adwm* Ns Cm selected.bg Ns Li : Ar "    #161616"
.Dl Adwm* Ns Cm selected.fg Ns Li : Ar "    #c0e0ff"
.Dl Adwm* Ns Cm normal.font Ns Li : Ar "    Liberation Sans:size=9:medium"
.Dl Adwm* Ns Cm normal.drop Ns Li : Ar "    1"
.Dl Adwm* Ns Cm normal.shadow Ns Li : Ar "  #373737"
.Dl Adwm* Ns Cm normal.border Ns Li : Ar "  #373737"
.Dl Adwm* Ns Cm normal.button Ns Li : Ar "  #9c9c9c"
.Dl Adwm* Ns Cm normal.bg Ns Li : Ar "      #373737"
.Dl Adwm* Ns Cm normal.fg Ns Li : Ar "      #a9a9a9"
.It Cm button.<button> Ns Li [ Ns Cm .toggled Ns Li ][ Ns Cm .disabled Ns Li ] Ns Cm .<state>.pixmap Ar <pixmap>
Specifies the pixmap to be use for various buttons in various
states.
.Pp
.Bl -tag -width "XX"
.It Cm <button>
Specifies to which button the style elements apply and
can be one of:
.Bl -tag -width ".Cm maximize" -compact -offset indent
.It Cm iconify
minimize button;
.It Cm maximize
maximize button;
.It Cm close
close button;
.It Cm shade
window shade button;
.It Cm stick
window pin button;
.It Cm lhalf
left-half maximus button;
.It Cm rhalf
right-half maximus button;
.It Cm float
float/tiled button;
.It Cm menu
window menu button.
.El
.It Li [ Ns Cm .toggle Ns Li ]
Used optionally for buttons that can be toggled (such as
maximize).  It indicates the toggled state (e.g.  maximized) rather
than the normal state (e.g. unmaximized).
.It Li [ Ns Cm .disabled Ns Li ]
Used optionally for buttons that can be disabled (e.g.  maximize)
that are disabled for some windows (e.g. windows that cannot be
resized).
.It Cm <state>
Specifies the state of the button and can be one of:
.Bl -tag -width ".Cm hovered" -compact -offset indent
.It Dq
normal state of the button;
.It Cm pressed
while a mouse button is held down on the button;
.It Cm hovered
while the pointer is hovering over the button;
.It Cm focused
when the window is focused;
.It Cm unfocus
when the is not focused.
.El
.El
.Pp
Example:
.Dl Adwm* Ns Cm button.shade.pixmap Ns Li : Pa sfocus.xpm
.Dl Adwm* Ns Cm button.shade.pressed.pixmap Ns Li : Pa spress.xpm
.Dl Adwm* Ns Cm button.shade.hovered.pixmap Ns Li : Pa shover.xpm
.Dl Adwm* Ns Cm button.shade.focused.pixmap Ns Li : Pa sfocus.xpm
.Dl Adwm* Ns Cm button.shade.unfocus.pixmap Ns Li : Pa sunfoc.xpm
.Dl Adwm* Ns Cm button.shade.disabled.hovered.pixmap Ns Li : Pa sunfoc.xpm
.Dl Adwm* Ns Cm button.shade.disabled.focused.pixmap Ns Li : Pa sunfoc.xpm
.Dl Adwm* Ns Cm button.shade.disabled.unfocus.pixmap Ns Li : Pa sunfoc.xpm
.Dl Adwm* Ns Cm button.shade.toggled.pixmap Ns Li : Pa Ufocus.xpm
.Dl Adwm* Ns Cm button.shade.toggled.pressed.pixmap Ns Li : Pa Upress.xpm
.Dl Adwm* Ns Cm button.shade.toggled.hovered.pixmap Ns Li : Pa Uhover.xpm
.Dl Adwm* Ns Cm button.shade.toggled.focused.pixmap Ns Li : Pa Ufocus.xpm
.Dl Adwm* Ns Cm button.shade.toggled.unfocus.pixmap Ns Li : Pa Uunfoc.xpm
.Dl Adwm* Ns Cm button.shade.toggled.disabled.hovered.pixmap Ns Li : Pa Uunfoc.xpm
.Dl Adwm* Ns Cm button.shade.toggled.disabled.focused.pixmap Ns Li : Pa Uunfoc.xpm
.Dl Adwm* Ns Cm button.shade.toggled.disabled.unfocus.pixmap Ns Li : Pa Uunfoc.xpm
.El
.Ss DOCK STYLE ELEMENTS
.Cm @PACKAGE@
has a number of dock style elements that can be used to theme the dock
that contains Window Maker dock applications.  Style elements control
the position and orientation of the dock as well as which dock
applications are contained in the dock and in which order.
.Bl -tag -width "XX"
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dock.position Ar <position>
Specifies the position of the dock on the screen.
The argument,
.Ar <position> ,
is an integer value that can be one of the following:
.Pp
.Bl -tag -width ".Ar DockSouthWest(0)" -compact -offset indent
.It Ar "DockNone(0)"
default (same as
.Ar "DockEast(1)" Ns );
.It Ar "DockEast(1)"
centered right on the screen;
.It Ar "DockNorthEast(2)"
top right on the screen;
.It Ar "DockNorth(3)"
centered top on the screen;
.It Ar "DockNorthWest(4)"
top left on the screen;
.It Ar "DockWest(5)"
centered left on the screen;
.It Ar "DockSouthWest(6)"
bottom left on the screen;
.It Ar "DockSouth(7)"
centered bottom on the screen;
.It Ar "DockSouthEast(9)"
bottom right on the screen.
.El
.Pp
The default value is
.Ar "DockNone(0)" :
that is, the dock is centered on the right of the screen.
.Pp
Example:
.Li Adwm* Ns Cm dock.position Ns Li : Ar 0
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dock.orient Ar <orientation>
Specifies the orientation of the dock on the screen.
The argument,
.Ar "<orientation>" ,
is an integer value that can be one of the following:
.Pp
.Bl -tag -width ".Ar DockVert(1)" -compact -offset indent
.It Ar DockHorz(0)
the dock is filled horizontally;
.It Ar DockVert(1)
the dock is filled vertically.
.El
.Pp
The default value is chosen based on
.Cm "dock.position" ,
and is chosen so that the dock extends along the edge of the
screen.
.Pp
Example:
.Li Adwm* Ns Cm dock.orient Ns Li : Ar 1
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dock.monitor Ar <monitor>
Specifies the monitor (in a multi-head setup) that will be
used to contain the dock.  The argument,
.Ar <monitor> ,
is a value between zero (0) and the number of monitors
(inclusive).
.Pp
The special value zero (0) indicates that the
monitor for the dock should be automatically chosen based on
.Cm "dock.position" .
When chosen automatically, the monitor selected for the dock
will be the monitor closest to the dock position on the
screen.
The other values indicate the monitor number of the monitor
that should contain the dock.
.Pp
The default value is zero (0): that is, the dock monitor is
chosen automatically.
.Pp
Example:
.Li Adwm* Ns Cm dock.monitor Ns Li : Ar 0
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dock.app<n> Ar "<res_name> <res_class> <wm_command>"
Specifies the relative position of dock applications in the
dock.
Dock applications with a value of
.Cm <n>
that is lower are placed earlier in the dock; higher, placed
later.
The arguments (separated by a single space) are interpreted as
follows:
.Pp
.Bl -tag -width ".Ar <wm_command>" -compact -offset indent
.It Ar "<res_name>"
resource name in
.Cm "WM_CLASS"
property;
.It Ar "<res_class>"
resource class in
.Cm "WM_CLASS"
property;
.It Ar "<wm_command>"
command in
.Cm "WM_COMMAND"
property.
.El
.Pp
Example:
.Dl Adwm* Ns Cm dock.app0 Ns Li : Ar " wmclockmon DockApp wmclockmon"
.Dl Adwm* Ns Cm dock.app1 Ns Li : Ar " wmblob DockApp wmblob"
.Dl Adwm* Ns Cm dock.app2 Ns Li : Ar " wmnd wmnd wmnd"
.Dl Adwm* Ns Cm dock.app3 Ns Li : Ar " wmcore wmcore wmcore"
.Dl Adwm* Ns Cm dock.app4 Ns Li : Ar " wmcpuload DockApp wmcpuload"
.Dl Adwm* Ns Cm dock.app5 Ns Li : Ar " wmtimer wmtimer wmtimer"
.Dl Adwm* Ns Cm dock.app6 Ns Li : Ar " wmsysmon wmsysmon wmsysmon"
.Dl Adwm* Ns Cm dock.app7 Ns Li : Ar " wmtimer wmtimer wmtimer"
.Dl Adwm* Ns Cm dock.app8 Ns Li : Ar " wmbubble wmbubble wmbubble"
.Dl Adwm* Ns Cm dock.app9 Ns Li : Ar " wmmixer WMMixer wmmixer"
.Dl Adwm* Ns Cm dock.app10 Ns Li : Ar "wmnet WMNET wmnet"
.Dl Adwm* Ns Cm dock.app11 Ns Li : Ar "wmCalClock wmCalClock wmCalClock"
.Pp
.Sy Note:
No defaults are provided in the default
.Pa adwmrc
file.  These resources, if defined at all, should likely be defined in the
.Cm styleFile
associated with the current style, as it is a themeable item.
.El
.Sh DEFAULTS
The default style is provided in the default style file,
typically,
.Pa "~/.adwm/stylerc" .
.Sh SEE ALSO
.Rs
.Xr adwm 1 ,
.Xr adwm-config 5 ,
.Xr adwm-keys 5 ,
.Xr adwm-style 5 .
.Re
.Sh BUGS
No outstanding bugs.
.Sh HISTORY
.Xr dwm 1
did not re-parent and had no option for title bars.
.Xr echinus 1
styles were quit simplistic: they did not provide different colors for
selected and deselected windows.  They did not provide advanced font
handling for the title bar; also, frame decorations did not include
resize grips and only crude title bar buttons with no configurable
placement.
.Pp
To meet the objective of being a fully functional overlapping window
manager in floating layouts, additional style elements were provided to
provide a sufficient overlapping experience.
.Sh AUTHORS
.An Brian Bidulock Aq bidulock@openss7.org
.Sh LICENSE
.Nm @PACKAGE@
is licensed under the GNU General Public License Version 3 or later.
.sp
See the
.Pa COPYING
file in the distribution.
.\" vim: set sw=4 et nocin tw=72 spell:
