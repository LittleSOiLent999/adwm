.Dd @MDOCDATE@
.Dt @PACKAGE_NAME@-CONFIG \&5 "File Formats"
.Os @PACKAGE_STRING@
.Sh NAME
.Nm @PACKAGE@-config
.Nd advanced dynamic window manager for X: configuration
.Sh SYNOPSIS
.Bl -item -compact
.It
.Cm @PACKAGE@ -f Pa <path>
.It
.Cm ${XDG_RUNTIME_DIR} Ns Pa /@PACKAGE@/@PACKAGE@rc
.It
.Cm ${XDG_CONFIG_HOME} Ns Pa /@PACKAGE@/@PACKAGE@rc
.It
.Cm ${HOME} Ns Pa /.@PACKAGE@/@PACKAGE@rc
.It
.Cm ${XDG_CONFIG_DIRS} Ns Pa /@PACKAGE@/@PACKAGE@rc
.It
.Pa @pkgconfdir@/@PACKAGE@rc
.El
.Sh DESCRIPTION
.Nm @PACKAGE_NAME@
is a light-weight re-parenting, dynamic tiling/stacking window
manager intended on being fully controllable using only the
keyboard: the objective of all dynamic tiling window managers.
However,
.Nm @PACKAGE_NAME@
also supports regular stacking floating window management as
well, and pointer actions are supported on decorative borders.
.Pp
Customization of configuration is defined in an X Resource
formatted configuration file.  Configuration is part of a main
configuration file.  It is typical to place the configuration
file an a file named
.Pa @PACKAGE@rc
in the main directory (e.g. in the
.Pa ~/.@PACKAGE@/@PACKAGE@rc
file).  See
.Sx FILES ,
below.
Configuration directives (some of which are compatible with
.Xr echinus 1 ),
are described below under
.Sx DIRECTIVES .
.Pp
Key bindings are typically placed in a separate file, as
described in
.Xr @PACKAGE@-keys 5 .
Style elements (for decorative borders and the dock) are
normally placed in a separate file, also, as described in
.Xr @PACKAGE@-style 5 .
.Sh SYNTAX
The general syntax of configuration directives, as specified directly in
the
.Nm @PACKAGE_NAME@
resource file, is as follows:
.Pp
.Dl Adwm* Ns Cm directive Ns Li : Ar <value>
.Pp
Where the fields are defined as follows:
.Pp
.Bl -tag -width "XX"
.It Cm directive
One of the directives described under
.Sx DIRECTIVES .
.It Ar <value> Li = Li { Ns Ar <pixmap> Ns Li | Ns Ar <font> Ns Li | Ns Ar <color> Ns Li | Ns Ar <number> Ns Li | Ns Ar <string> Ns Li | Ns Ar <bool> Ns Li }
The value depends on the directive that is specified.  Typically, the
value is a path and name of a pixmap file, an X11 true-type or
bitmapped font specification, an X11 color specification, a number, a
string, a boolean, or a specially formatted value as follows:
.Pp
.Bl -tag -width "XXXXXXXX"
.It Ar <pixmap>
Pixmaps are specified with a full or relative path and file name.  When
the path is relative, it is relative to the directory in which the
configuration file resides.
.sp 0
Example:
.Li Adwm* Ns Cm button.iconify.pixmap Ns Li : Pa pixmaps/min_focused.xpm
.It Ar <font>
Fonts are specified with an Fontconfig pattern string or an X Logical
Font Description (XFLD) formatted font specification string.  See
.Xr FcParseName 3
and
.Xr xft 3 .
.sp 0
Example:
.Li Adwm* Ns Cm normal.font Ns Li : Ar "Liberation Sans:size=9:medium"
.It Ar <color>
Colors are specified as X resource colors.  This can be a color name or
color specification.  For the possible format of colors, see
.Xr XParseColor 3 .
.sp 0
Example:
.Li Adwm* Ns Cm selected.shadow Ns Li : Ar #394870
.It Ar <number>
A decimal number.
.sp 0
Example:
.Li Adwm* Ns Cm title Ns Li : Ar 15
.It Ar <string>
A specially formatted string as specified by the directive definition.
.sp 0
Example:
.Li Adwm* Ns Cm titlelayout Ns Li : Ar "EFASLN  RIMC"
.It Ar <bool>
A boolean value taking either zero (0) or one (1) as an argument.
.sp 0
Example:
.Li Adwm* Ns Cm dectiled Ns Li : Ar 0
.El
.El
.Sh DIRECTIVES
The configuration directives are defined below.  Each heading
provides the format of the directive resource (without the
.Li \(lqAdwm*\(rq
portion) and the possible arguments for each directive, in
accordance with the directive syntax described above under
.Sx SYNTAX .
.Ss FILE DIRECTIVES
File directives specify where to find other configuration
files.  Although all directives, key bindings and style
elements can be located in a single configuration file, it is
convenient to separate key bindings and style elements into
seprate files.  The main configuration file is loaded first,
then the key bindings file, and lastly the style elements
file.  The file directives specifying the location of the last
two files are as follows:
.Bl -tag -width "XX"
.It Cm themeName Pa <string>
Specifies the name of a theme directory under which
to look for the
.Cm themeFile
file.  Defaults to the value,
.Dq Default .
When specified, any default or specified relative
path in the
.Cm themeFile
resource is considered relative to this directory.
.Pp
The directory can simply be an absolute path to a
directory, or a theme name that is interpreted as
the name of a subdirectory relative to the following
directories:
.Pp
.Bl -item -compact
.It
.Cm ${XDG_DATA_HOME} Ns Pa /themes/ Ns Cm <themeName> Ns Pa /@PACKAGE@/
.It
.Cm ${HOME} Ns Pa /.@PACKAGE@/themes/ Ns Cm <themeName> Ns Pa /
.It
.Cm ${XDG_DATA_DIRS} Ns Pa /themes/ Ns Cm <themeName> Ns Pa /@PACKAGE@/
.It
.Pa @pkgconfdir@/themes/ Ns Cm <themeName> Ns Pa /
.El
.Pp
See
.Xr @PACKAGE@-theme 5
for more information on the format and contents of this file.
.Pp
Default:
.Li Adwm* Ns Cm themeName Ns Li : Pa Default
.It Cm themeFile Pa <path>
Specifies the path and filename,
.Pa <path> ,
of a file from which to read theme elements.  The path may be absoluite
or relative: when relative, the path is considered relative to the
directory which contains the configuration file in which the declaration
resides.  The default is
.Pa themerc ,
that is,
the file named
.Pa themerc
in the same directory as the main configuration file.
If the
.Pa themerc
file does not exist,
.Nm @PACKAGE_NAME@
goes looking for it in the following places:
.Pp
.Bl -item -compact
.It
.Cm ${XDG_DATA_HOME} Ns Pa /themes/ Ns Cm <themeName> Ns Pa /@PACKAGE@/themerc
.It
.Cm ${HOME} Ns Pa /.@PACKAGE@/themes/ Ns Cm <themeName> Ns Pa /themerc
.It
.Cm ${XDG_DATA_DIRS} Ns Pa /themes/ Ns Cm <themeName> Ns Pa /@PACKAGE@/themerc
.It
.Pa @pkgconfdir@/themes/ Ns Cm <themeName> Ns Pa /themerc
.\".It
.\".Cm ${HOME} Ns Pa /.@PACKAGE@/themerc
.\".It
.\".Pa @pkgconfdir@/themerc
.El
.Pp
See
.Xr @PACKAGE@-theme 5
for more information on the format and contents of this file.
.Pp
Default:
.Li Adwm* Ns Cm themeFile Ns Li : Pa themerc
.It Cm keysFile Pa <path>
Specifies the path and filename,
.Pa <path> ,
of a file from which to read key bindings.
The path may be absolute or relative: when relative, the path
is considered relative to the directory which contains the
configuration file in which the declaration resides.
The default is
.Pa keysrc ,
that is, the file named
.Pa keysrc
in the same directory as the main configuration file.
.Pp
The
.Pa keysrc
file is normally placed in the same directory as a
.Pa themerc
or
.Pa stylerc
file to which it is associated, or included by one of those files.  When
a
.Pa themerc
file is specified, the file will normally specify or include the
.Pa keysFile .
.Pp
See
.Xr @PACKAGE@-keys 5
for more information on the format and contents of this file.
.Pp
Default:
.Li Adwm* Ns Cm keysFile Ns Li : Pa keysrc
.It Cm styleName Pa <directory>
Specifies the name of a style directory under which
to look for the
.Pa stylerc
file.  Defaults to the value of the
.Cm theme.name
resources, or when that resource does not exist,
.Dq Default .
When specified, any default or specified relative
path in the
.Cm styleFile
resource is considered relative to this directory.
.Pp
The directory can simply be and absolute path to a
directory, or a style name which is interpreted as
the name of a subdirectory relative to the following
directories:
.Pp
.Bl -item -compact
.It
.Cm ${XDG_DATA_HOME} Ns Pa /themes/ Ns Cm <styleName> Ns Pa /@PACKAGE@/
.It
.Cm ${HOME} Ns Pa /.@PACKAGE@/styles/ Ns Cm <styleName> Ns Pa /
.It
.Cm ${XDG_DATA_DIRS} Ns Pa /themes/ Ns Cm <styleName> Ns Pa /@PACKAGE@/
.It
.Pa @pkgconfdir@/styles/ Ns Cm <styleName> Ns Pa /
.El
.Pp
See
.Xr @PACKAGE@-style 5
for more information on the format and contents of this file.
.Pp
Default:
.Li Adwm* Ns Cm styleName Ns Li : Pa Default
.It Cm styleFile Pa <path>
Specifies the path and filename,
.Pa <path> ,
of a file from which to read style elements.
The path may be absolute or relative: when relative, the path
is considered relative to the directory which contains the
configuration file in which the declaration resides.
The default is
.Pa stylerc ,
that is, the file named
.Pa stylerc
in the same directory as the main configuration file.
.Pp
The
.Pa stylerc
file is normally placed in the same directory as the
.Pa themerc
file to which it corresponds, or included by that file.  When a
.Pa themerc
file is specified, the file will normally specify or include the
.Pa styleFile
file.
If the
.Pa stylerc
file does not exist,
.Nm @PACKAGE_NAME@
goes looking for it in the following places:
.Pp
.Bl -item -compact
.It
.Cm ${XDG_DATA_HOME} Ns Pa /themes/ Ns Cm <styleName> Ns Pa /@PACKAGE@/stylerc
.It
.Cm ${HOME} Ns Pa /.@PACKAGE@/styles/ Ns Cm <styleName> Ns Pa /stylerc
.It
.Cm ${XDG_DATA_DIRS} Ns Pa /themes/ Ns Cm <styleName> Ns Pa /@PACKAGE@/stylerc
.It
.Pa @pkgconfdir@/styles/ Ns Cm <styleName> Ns Pa /stylerc
.El
.Pp
See
.Xr @PACKAGE@-style 5
for more information on the format and contents of this file.
.Pp
Default:
.Li Adwm* Ns Cm styleFile Ns Li : Pa stylerc
.It Cm dockFile Pa <path>
Specifies the path and filename,
.Pa <path> ,
of a file from which to read dock application style elements and dock
application ordering.
The path may be absolute or relative: when relative, the path
is considered relative to the directory which contains the
configuration file in which the declaration resides.
The default is
.Pa dockrc ,
that is, the file named
.Pa dockrc
in the same directory as the main configuration file.
.Pp
The
.Pa dockrc
file is normally placed in the same directory as the
.Pa themerc
file to which it corresponds, or included by that file.  When a
.Pa themerc
file is specified, the file will normally specify or include the
.Pa dockFile
file.
If the
.Pa dockrc
file does not exist,
.Nm @PACKAGE_NAME@
goes looking for it in the following places:
.Pp
.Bl -item -compact
.It
.Cm ${XDG_DATA_HOME} Ns Pa /themes/ Ns Cm <themeName> Ns Pa /@PACKAGE@/dockrc
.It
.Cm ${HOME} Ns Pa /.@PACKAGE@/themes/ Ns Cm <themeName> Ns Pa /dockrc
.It
.Cm ${XDG_DATA_DIRS} Ns Pa /themes/ Ns Cm <themeName> Ns Pa /@PACKAGE@/dockrc
.It
.Pa @pkgconfdir@/themes/ Ns Cm <themeName> Ns Pa /dockrc
.El
.Pp
See
.Xr @PACKAGE@-dock 5
for more information on the format and contents of this file.
.Pp
Default:
.Li Adwm* Ns Cm dockFile Ns Li : Pa dockrc
.El
.Ss GENERAL DIRECTIVES
General directives affect primarily the general look and feel of the
window manager.
With the exception of
.Cm useveil ,
general directives can be applied to all screens, or to a specific
screen using the
.Li [ Ns Cm screen<s>. Ns Li ]
syntax, where
.Cm <s>
is the number of the screen, indexed from zero, to which to apply the
directive.
The general directives are as follows:
.Bl -tag -width "XX"
.It Cm useveil Ar <bool>
.Nm @PACKAGE_NAME@
has the ability to raise a parent-relative window (veil) over
the desktop work area before reconfiguring windows and then
dropping the veil after windows are recofigured.  This serves
to avoid unnecessary exposure events and to speed
reconfiguration of the layout.  On some versions of the X
server, this has the reverse effect and causes flickering and
unnecessary exposure events.  This option is present so that
the veil behaviour can be set appropriately for a specific
system.
.Pp
The
.Ar <bool>
value can be zero (0), indicating false, or non-zero (1),
indicating true.
The default is zero (0): that is, the veil will not be used by
default.
.Pp
Default:
.Li Adwm* Ns Cm useveil Ns Li : Ar 0
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm attachaside Ar <bool>
Specifies whether newly created windows are attached on the
master or slave side of the layout.
The
.Ar <bool>
value can be zero (0), indicating false, or non-zero (1),
indicating true.
When true, newly created windows will be attached as slaves;
when false, attached as master.
The default is one (1): that is, newly created windows will be
attached as slaves.
I normally like attaching new windows as master
.Pp
Default:
.Li Adwm* Ns Cm attachaside Ns Li : Ar 0
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm decoratetiled Ar <bool>
Specifies whether to decorate tiled windows (by default) in
tiled layouts.  Normally, tiled windows are not decorated with
a title bar and resize grips.
The
.Ar <bool>
value can be zero (0), indicating false, or non-zero (1),
indicating true.
When true, tiled windows are decorated by default; when false,
they are not.
The default value is zero (0): that is, tiled windows are not
decorated by default.
.Pp
Default:
.Li Adwm* Ns Cm decoratetiled Ns Li : Ar 0
.Pp
.Sy Note:
the setting of this directive can be changed on a view-by-view
basis using the 
.Cm dectiled
key binding described in
.Xr @PACKAGE@-keys 5 .
The setting of this directive merely sets the defaults for all
views on the specified screen at startup.
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm decoratemax Ar <bool>
Specifies whether to decorate maximized windows (by default).
Normally, maximized windows are decorated when they are
floaters, or in floating layouts.  However, when windows are
maximized, more real estate can be provided to the window by
not decorating them.
The
.Ar <bool>
value can be zero (0), indicating false, or non-zero (1),
indicating true.
When true, maximized windows will be decorated; when false,
they will not.
The default value is one (1): that is, maximized windows are
decorated by default.
.Pp
Default:
.Li Adwm* Ns Cm decoratemax Ns Li : Ar 1
.Pp
.Sy Note:
windows that fill the available work area in tiled
layouts (including \(lqmonacle\(rq mode) are not maximized
windows.
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm hidebastards Ar <number>
Specifies whether to lower bastards, hide bastards (remove struts) or
turn struts off when struts are toggled.  This is only in effect when
struts are disabled.
The
.Ar <number>
value can be one of the following:
.Pp
.Bl -tag -width ".Ar 2 Li - Ic StrutsDown" -compact -offset indent
.It Ar 0 Li - Ic StrutsOff
Turn struts and dock off: marginalize unless selected.
.It Ar 1 Li - Ic StrutsHide
Hide struts and dock (remove from display).
.It Ar 2 Li - Ic StrutsDown
Struts and dock off: lower to bottom unless selected.
.El
.Pp
The default value is zero (0): that is, turn struts off rather
than hiding them.
.Pp
Applications with struts are dock and panel applications that
occupy the edge of the screen.  When struts are on, these
applications occupy their reserved area and the work area on
the screen is reduced.  When struts are off, these
applications occupy the edge of the screen; but, the work area
is not reduced.  When struts are hidden, the work area of the
screen is not reduced; however, the applications owning the
struts are not displayed.
.Pp
This directive affects primarily the response to the
.Cm struts
key binding as described in
.Xr @PACKAGE@-keys 5 .
Setting this value to true has the effect of applying or
removing struts; whereas, the value of false, provides for
exposing and hiding struts.
.Pp
Default:
.Li Adwm* Ns Cm hidebastards Ns Li : Ar 2
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm strutsactive Ar <bool>
Specifies whether struts (panels and dock) should default to
shown or hidden.
The
.Ar <bool>
value can be zero (0), indicating false, or non-zero (1),
indicating true.
When true, struts default to shown; false, hidden.
The default value is one (1): that is, struts are shown by default.
.Pp
Default:
.Li Adwm* Ns Cm strutsactive Ns Li : Ar 0
.Pp
.Sy Note:
this setting only affects the default for views.  The actual
setting for a particular view can be altered using the
.Cm struts
key binding as described in
.Xr @PACKAGE@-keys 5 .
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm autoroll Ar <bool>
Specifies whether shaded windows (window that are rolled up inside
their title bars) should automatically be unshaded when the window
takes focus (is selected).
The
.Ar <bool>
value can be zero (0), indicating false, or non-zero (1),
indicating true.
When true, windows will automatically be unshaded; false, will not.
The default is zero (0): that is, shaded windows will not be
automatically unshaded on being selected.
.Pp
Default:
.Li Adwm* Ns Cm autoroll Ns Li : Ar 1
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm sloppy Ar <model>
The default value is zero (0): that is, click to focus.
The argument,
.Ar <model> ,
is an integer value that can be one of the following:
.Pp
.Bl -tag -width ".Ar SloppyRaise(3)" -compact -offset indent
.It Ar "Clk2Focus(0)"
click in windows to focus them;
.It Ar "SloppyFloat(1)"
focus follows mouse (floating windows only);
.It Ar "AllSloppy(2)"
focus follows mouse (all windows);
.It Ar "SloppyRaise(3)"
focus follows mouse and window are raised.
.El
.Pp
The default, when unspecified, is zero (0), or click-to-focus.
.Pp
Default:
.Li Adwm* Ns Cm sloppy Ns Li : Ar 2
.Pp
.Sy Note:
the most tested focus model is
.Ar AllSloppy(2) .
This is primarly because it is the model that I use every day.
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm snap Ar <pixels>
Specifies the snap distance in pixels to be used when moving
floating windows.  When moving windows, when a window edge
come within
.Ar <pixels>
of a similarly oriented edge of another window, or the edge of
the monitor or desktop work area, the window will snap to that
position.
The default value is five (5) pixels.
.Pp
Default:
.Li Adwm* Ns Cm snap Ns Li : Ar 5
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dragdistance Ar <pixels>
When
.Nm @PACKAGE_NAME@
receives a click on a title bar or resize grip, the action
performed can depend upon whether the pointer is dragged or
whether the button is simply clicked.  When clicking a mouse
button, the pointer may mechanically move a small amount
making it difficult to click in a title bar or resize grip.
The drag distance, in pixels, is the distance that the pointer
can move while a button is depressed without the window
manager considering the action to be a drag.  This applies to
all drags supported by the window manager.  The default
value is five (5) pixels.
.Pp
Default:
.Li Adwm* Ns Cm dragdistance Ns Li : Ar 5
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm mwfact Ar <float>
Specifies the factor for the width of the master area in
tiled layouts.  The argument is a floating point number
between 0.1 and 0.9 (inclusive) that specifies the proportion
of the width of the work area allocated to the master.  The
default is 0.6 (60% of the width of the work area).
This is
the default value for new layouts; the value for specific
views can be changed using the
.Cm mwfact
key binding defined in
.Xr @PACKAGE@-keys 5 .
.Pp
Default:
.Li Adwm* Ns Cm mwfact Ns Li : Ar 0.6
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm mhfact Ar <float>
Specifies the factor for the height of the master area in
tiled layouts.  The argument is a floating point number
between 0.1 and 0.9 (inclusive) that specifies the proportion
of the height of the work area allocated to the master.  The
default is 1.0 (100% of the height of the work area).
This is
the default value for new layouts; nevertheless the value is
not currently used.
.Pp
Default:
.Li Adwm* Ns Cm mhfact Ns Li : Ar 1.0
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm nmaster Ar <number>
Specifies the default number of master windows in master/slave
tiled layouts.  Tiled layouts have a fixed number of masters
and a variable number of slaves.  This directive sets the
default number of masters.  The number of masters in a layout
can be changed using the
.Cm nmaster
key binding described in
.Xr @PACKAGE@-keys 5 .
The default number is one (1).  Only values between 1 and 10
(inclusive) are permitted.
.Pp
Default:
.Li Adwm* Ns Cm nmaster Ns Li : Ar 1
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm ncolumns Ar <number>
Specifies the default number of columns (rows) in grid tiled
layouts.  Grid layouts have a fixed number of rows or columns
over which viewed windows are distributed.  This directive
sets the default number.  The number of columns (rows) in a
layout can be changed using the
.Cm ncolumns
key binding described in
.Xr @PACKAGE@-keys 5 .
The default number is three (3).  Only values between 1 and 10
(inclusive) are permitted.
.Pp
Default:
.Li Adwm* Ns Cm ncolumns Ns Li : Ar 3
.El
.Ss TAG DIRECTIVES
Tag directives affect the number of views (desktops) presented
by the window manager and names and layouts associated with
those views.
These directives should normally be specified in the
.Pa styleFile
instead of the main configuration file: see
.Xr @PACKAGE@-style 5 ;
however, they are also addressed here.
The tag directives are as follows:
.Bl -tag -width "XX"
.It Cm tags.number Ar <number>
Specifies the number of tags (i.e. desktops) available.
The default number is five (5).
.Pp
Default:
.Li Adwm* Ns Cm tags.number Ns Li : Ar 7
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm tags.name<n> Ar <string>
Specifies the name associated with each tag (i.e. desktop),
for a specific screen,
.Cm <s> ,
or for all screens.
Tags are indexed from zero (0) to the total number of tags
minus one.
.Pp
Default:
.Dl Adwm* Ns Cm tags.name0 Ns Li : Ar main
.Dl Adwm* Ns Cm tags.name1 Ns Li : Ar web
.Dl Adwm* Ns Cm tags.name2 Ns Li : Ar doc
.Dl Adwm* Ns Cm tags.name3 Ns Li : Ar dev
.Dl Adwm* Ns Cm tags.name4 Ns Li : Ar scr
.Dl Adwm* Ns Cm tags.name5 Ns Li : Ar gfx
.Dl Adwm* Ns Cm tags.name6 Ns Li : Ar misc
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm deflayout Ar <layout>
Specifies the default layout for views that have no layout defined for
them.
The argument,
.Ar <layout> ,
is a single lowercase ascii character that designates the layout, that
can be one of the following:
.Pp
.Bl -tag -width ".Cm 'm'" -compact -offset indent
.It Cm 'i'
stacking window arrangement;
.It Cm 't'
tile arrangment with master on left;
.It Cm 'b'
tiled arrangement with mast on bottom;
.It Cm 'u'
tiled arrangement with mast on top;
.It Cm 'l'
tiled arrangement with master on right;
.It Cm 'm'
monacle mode tiled arrangement;
.It Cm 'f'
stacking window arrangement;
.It Cm 'g'
grid tiled arrangement with columns.
.El
.Pp
The default value is
.Cm 'i' :
that is, stacking window arrangement.
.Pp
Default:
.Li Adwm* Ns Cm deflayout Ns Li : Ar l
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm tags.layout<n> Ar <layout>
Specifies the layout for a single view (optionally on a given screen).
When unspecified for a view, defaults to the setting of the
.Cm deflayout
directive (usually floating/stacking).
This is only the default setting for the view at startup: it is
possible to use the key bindings to change the layout for a view.
The argument,
.Ar <layout> ,
is a single lowercase ascii character that designates the layout, that
can be one of the following:
.Pp
.Bl -tag -width ".Cm 'm'" -compact -offset indent
.It Cm 'i'
stacking window arrangement;
.It Cm 't'
tile arrangment with master on left;
.It Cm 'b'
tiled arrangement with mast on bottom;
.It Cm 'u'
tiled arrangement with mast on top;
.It Cm 'l'
tiled arrangement with master on right;
.It Cm 'm'
monacle mode tiled arrangement;
.It Cm 'f'
stacking window arrangement;
.It Cm 'g'
grid tiled arrangement with columns.
.El
.Pp
Default:
.Dl Adwm* Ns Cm tags.layout1 Ns Li : Ar m
.Dl Adwm* Ns Cm tags.layout3 Ns Li : Ar b
.El
.Ss DOCK DIRECTIVES
The dock is an area that contains Window Maker dock
applications.
The following directives specify the position and orientation
of the dock.
.Bl -tag -width "XX"
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dock.position Ar <position>
Specifies the position of the dock on the screen.
The argument,
.Ar <position> ,
is an integer value that can be one of the following:
.Pp
.Bl -tag -width ".Ar DockSouthWest(0)" -compact -offset indent
.It Ar "DockNone(0)"
default (same as
.Ar "DockEast(1)" Ns );
.It Ar "DockEast(1)"
centered right on the screen;
.It Ar "DockNorthEast(2)"
top right on the screen;
.It Ar "DockNorth(3)"
centered top on the screen;
.It Ar "DockNorthWest(4)"
top left on the screen;
.It Ar "DockWest(5)"
centered left on the screen;
.It Ar "DockSouthWest(6)"
bottom left on the screen;
.It Ar "DockSouth(7)"
centered bottom on the screen;
.It Ar "DockSouthEast(9)"
bottom right on the screen.
.El
.Pp
The default value is
.Ar "DockNone(0)" :
that is, the dock is centered on the right of the screen.
.Pp
Default:
.Li Adwm* Ns Cm dock.position Ns Li : Ar 0
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dock.orient Ar <orientation>
Specifies the orientation of the dock on the screen.
The argument,
.Ar "<orientation>" ,
is an integer value that can be one of the following:
.Pp
.Bl -tag -width ".Ar DockVert(1)" -compact -offset indent
.It Ar DockHorz(0)
the dock is filled horizontally;
.It Ar DockVert(1)
the dock is filled vertically.
.El
.Pp
The default value is chosen based on
.Cm "dock.position" ,
and is chosen so that the dock extends along the edge of the
screen.
.Pp
Default:
.Li Adwm* Ns Cm dock.orient Ns Li : Ar 1
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dock.monitor Ar <monitor>
Specifies the monitor (in a multi-head setup) that will be
used to contain the dock.  The argument,
.Ar <monitor> ,
is a value between zero (0) and the number of monitors
(inclusive).
.Pp
The special value zero (0) indicates that the
monitor for the dock should be automatically chosen based on
.Cm "dock.position" .
When chosen automatically, the monitor selected for the dock
will be the monitor closest to the dock position on the
screen.
The other values indicate the monitor number of the monitor
that should contain the dock.
.Pp
The default value is zero (0): that is, the dock monitor is
chosen automatically.
.Pp
Default:
.Li Adwm* Ns Cm dock.monitor Ns Li : Ar 0
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm dock.app<n> Ar "<res_name> <res_class> <wm_command>"
Specifies the relative position of dock applications in the
dock.
Dock applications with a value of
.Cm <n>
that is lower are placed earlier in the dock; higher, placed
later.
The arguments (separated by a single space) are interpreted as
follows:
.Pp
.Bl -tag -width ".Ar <wm_command>" -compact -offset indent
.It Ar "<res_name>"
resource name in
.Cm "WM_CLASS"
property;
.It Ar "<res_class>"
resource class in
.Cm "WM_CLASS"
property;
.It Ar "<wm_command>"
command in
.Cm "WM_COMMAND"
property.
.El
.Pp
Example:
.Dl Adwm* Ns Cm dock.app0 Ns Li : Ar " wmclockmon DockApp wmclockmon"
.Dl Adwm* Ns Cm dock.app1 Ns Li : Ar " wmblob DockApp wmblob"
.Dl Adwm* Ns Cm dock.app2 Ns Li : Ar " wmnd wmnd wmnd"
.Dl Adwm* Ns Cm dock.app3 Ns Li : Ar " wmcore wmcore wmcore"
.Dl Adwm* Ns Cm dock.app4 Ns Li : Ar " wmcpuload DockApp wmcpuload"
.Dl Adwm* Ns Cm dock.app5 Ns Li : Ar " wmtimer wmtimer wmtimer"
.Dl Adwm* Ns Cm dock.app6 Ns Li : Ar " wmsysmon wmsysmon wmsysmon"
.Dl Adwm* Ns Cm dock.app7 Ns Li : Ar " wmtimer wmtimer wmtimer"
.Dl Adwm* Ns Cm dock.app8 Ns Li : Ar " wmbubble wmbubble wmbubble"
.Dl Adwm* Ns Cm dock.app9 Ns Li : Ar " wmmixer WMMixer wmmixer"
.Dl Adwm* Ns Cm dock.app10 Ns Li : Ar "wmnet WMNET wmnet"
.Dl Adwm* Ns Cm dock.app11 Ns Li : Ar "wmCalClock wmCalClock wmCalClock"
.Pp
.Sy Note:
No defaults are provided in the default
.Pa @PACKAGE@rc
file.  These resources, if defined at all, should likely be defined in the
.Pa styleFile
associated with the current style, as it is a themeable item.
.El
.Ss MOUSE DIRECTIVES
Mouse directives affect the actions of button clicks on the
root window, or on the menu button in the title bar of client
windows.  These directivees are normally specified in the
.Pa keysFile
instead of the main configuration file: see
.Xr @PACKAGE@-keys 5 ;
however, they are also addressed here.
.Pp
Mouse directive apply to button pressed on the root window or
menu button on a client window title bar.  It is possible to
specify different commands to execute based upon the screen on
which the button is clicked by using the
.Li [ Ns Cm screen<s>. Ns Li ]
syntax (where
.Cm <s>
is the number of the screen indexed from zero).
.Bl -tag -width "XX"
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm command Ar <shell-command>
Specifies the shell command to execute when button 3 (right
button) is pressed on the root window.
The default, when unspecified, is
.Li "\(lqxterm\(rq" .
(The default is consistent with the behaviour of many tiling
window managers, as most dynamic window managers do not
support a root menu.)
See
.Xr xde-menu 1
for a suitable root window menu for
.Cm @PACKAGE@ .
.Pp
Default:
.Li Adwm* Ns Cm command Ns Li : Ar "xde-menu -P -b 3"
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm command2 Ar <shell-command>
Specifies the shell command to execute when button 2 (middle
button) is pressed on the root window.
The default is to not execute a shell command.
See
.Xr xde-wkspmenu 1
for a suitable workspace menu for
.Cm @PACKAGE@ .
.Pp
Default:
.Li Adwm* Ns Cm command2 Ns Li : Ar "xde-wkspmenu -p -b 2"
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm command3 Ar <shell-command>
Specifies the shell command to execute when button 1 (left
button) is pressed on the root window.
The default is to not execute a shell command.
See
.Xr xde-winlist 1
for a suitable window list menu for
.Cm @PACKAGE@ .
.Pp
Default:
.Li "! Adwm*" Ns Cm command3 Ns Li : Ar "xde-winlist -p -b 1 --hidden"
.Pp
.Sy Note:
This command is commented out in the default
.Pa keysFile
because it can be quite annoying to bind button 1 on the root window.
.It Li [ Ns Cm screen<s>. Ns Li ] Ns Cm menucommand Ar <shell-command>
Specifies the shell command to execute when a button is
pressed on the \(lqmenu\(rq button in the title bar.
The default is to not execute a shell command.
See
.Xr xde-winmenu 1
for a suitable window menu for
.Cm @PACKAGE@ .
.Pp
Default:
.Li Adwm* Ns Cm menucommand Ns Li : Ar "xde-winmenu -p -b 1"
.El
.Ss KEY BINDINGS
Key bindings describe the binding of key presses to various functions.
These directives are normally specified in the
.Pa keysFile
instead of the main configuration file.  They are not addressed here.
See
.Xr @PACKAGE@-keys 5 .
.Ss WINDOW RULES
.Sh DEFAULTS
The default configuration is provided in the default
configuration file, typically,
.Pa "~/.@PACKAGE@/@PACKAGE@rc" .
A system default configuration file is provided in
.Pa "@pkgconfdir@/@PACKAGE@rc" ,
a listing of which appears below.
.Pp
.Bd -literal -unfilled -offset indent
Adwm*snap: 5

Adwm*sloppy: 2
Adwm*opacity: 0.8
Adwm*decoratetiled: 0
Adwm*hidebastards: 2
Adwm*strutsactive: 0
Adwm*mwfact: 0.6
Adwm*nmaster: 1
Adwm*attachaside: 0
Adwm*autoroll: 1

Adwm*deflayout: l

Adwm*tags.number: 7
Adwm*tags.name0: main
Adwm*tags.name1: web
Adwm*tags.name2: doc
Adwm*tags.name3: dev
Adwm*tags.name4: scr
Adwm*tags.name5: gfx
Adwm*tags.name6: misc

Adwm*tags.layout0: f
Adwm*tags.layout1: m
Adwm*tags.layout2: t
Adwm*tags.layout3: g
Adwm*tags.layout4: b
.Ed
.Sh FILES
.Bl -tag -width "XX"
.It Pa ~/.@PACKAGE@/@PACKAGE@rc
The location of the default user's configuration file.
.It Pa ~/.@PACKAGE@/keysrc
The location of the default user's key bindings file.
.It Pa ~/.@PACKAGE@/stylerc
The location of the default user's style file.
.It Pa ~/.@PACKAGE@/styles/ Ns Cm <theme.name> Ns Pa /stylerc
The location of the default user's themed style file.
.It Pa @pkgconfdir@/@PACKAGE@rc
The location of the system default configuration file.
.It Pa @pkgconfdir@/keysrc
The location of the system default key bindings file.
.It Pa @pkgconfdir@/styles/ Ns Cm <theme.name> Ns Pa /keysrc
The location of the system default themed key bindings file.
.It Pa @pkgconfdir@/styles/ Ns Cm <theme.name> Ns Pa /stylerc
The location of the system default themed style file.
.El
.Sh SEE ALSO
.Rs
.Xr echinus 1 ,
.Xr @PACKAGE@-theme 5 ,
.Xr @PACKAGE@-keys 5 ,
.Xr @PACKAGE@-style 5 ,
.Xr @PACKAGE@-dock 5 ,
.Xr FcParseName 3 ,
.Xr xft 3 ,
.Xr XParseColor 3 ,
.Xr xde-menu 1 ,
.Xr xde-wkspmenu 1 ,
.Xr xde-winlist 1 ,
.Xr xde-winmenu 1 ,
.Xr @PACKAGE@ 1 ,
.Xr dwm 1 ,
.Xr openbox 1 ,
.Xr pekwm 1 ,
.Xr blackbox 1 ,
.Xr fluxbox 1 ,
.Xr icewm 1 .
.Re
.Sh BUGS
No outstanding bugs.
.Sh HISTORY
.Cm @PACKAGE@
configuration began with the simple X Resource scheme
provided by
.Xr echinus 1
and quickly grew from there to support the advanced features
of
.Nm @PACKAGE_NAME@ .
The same basic X Resource scheme is supported and an
.Xr echinus 1
resource file will work with
.Nm @PACKAGE_NAME@
(substituting
.Ic Adwm*
for
.Ic Echinus* Ns ).
.Sh AUTHORS
.An Brian Bidulock Aq bidulock@openss7.org
.Sh LICENSE
.Nm @PACKAGE_NAME@
is licensed under the GNU General Public License Version 3 or later.
.sp
See the
.Pa COPYING
file in the distribution.
.\" vim: set ft=nroff sw=4 et nocin tw=72 spell:
