.TH ECHINUS 1 echinus\-VERSION
.SH NAME
echinus \- a window manager
.SH SYNOPSIS
.B echinus
.RB [ \-v ]
.RB [ \-f
.RI conf
.RB ]
.SH DESCRIPTION
echinus is a lightweight window manager for X based on dwm's source code.
It manages windows in maximized, floating and tiled layouts. Either layout
can be applied dynamically, optimizing the environment for the
application in use and the task performed.
.P
In maximized layout only one window can be seen at the moment, but you can switch
between them with hotkeys. In floating layout windows can be
resized and moved freely. Dialog windows are always managed floating,
regardless of the layout applied.
.P
Windows are grouped by tags. Each window can be tagged with one or multiple
tags. Selecting certain tags displays all windows with these tags.
.P
echinus draws a small border around windows to indicate the focus state and
an optional titlebar.
.SH OPTIONS
.IP -v
prints version information to standard output, then exits.
.IP "-f conf"
specifies an alternative configuration file.
By default, echinus loads the configuration file from
.IR ~/.echinus/echinusrc ,
if present, then looks for the system-wide configuration file
.IR CONFDIR/echinusrc .
The configuration file is a set of X resources (with a class of Echinus).
.SH USAGE
.SS Title bar
.TP
.B Button1
focuses window and raises it on top of the stack.
.TP
.B Button2
resizes window.
.SS Keyboard commands
.TP
.B Mod1\-t
Start
.BR xterm.
.TP
.B Mod1\-Return
Zooms/cycles current window to/from master area (tiled layout only).
.TP
.B Mod1\-Tab
Toggles to the previously selected tags.
.TP
.B Mod1\-b
Toggles on/off statusbar space.
.TP
.B Mod1\-h
Decreases the master area width about 5% (tiled layout only).
.TP
.B Mod1\-j
Focus next window.
.TP
.B Mod1\-k
Focus previous window.
.TP
.B Mod1\-l
Increases the master area width about 5% (tiled layout only).
.TP
.B Mod1\-m
Enable maximized (monocle) mode.
.TP
.B Mod1\-r
Enable tiled mode.
.TP
.B Mod1\-w
Enable bottom-tiled mode.
.TP
.B Mod1\-f
Enable floating mode.
.TP
.B Mod1\-i
Enable ifloating mode.
.TP
.B Mod1\-Shift\-[1..n]
Apply
.RB nth
tag to current window.
.TP
.B Mod1\-Control\-Shift\-[1..n]
Add/remove
.B nth
tag to/from current window.
.TP
.B Mod1\-Shift\-c
Close focused window.
.TP
.B Mod1\-space
Toggle between tiled and floating layout (affects all windows).
.TP
.B Mod1\-[F1..Fn]
View all windows with
.BR nth
tag.
.TP
.B Mod1\-Control\-[1..n]
Add/remove all windows with
.BR nth
tag to/from the view.
.TP
.B Mod1\-Control\-q
Quit echinus.
.SS Mouse commands
.TP
.B Mod1\-Button1
Move current window while dragging. Tiled windows will be toggled to the floating state.
.TP
.B Mod1\-Button2
Zooms/cycles current window to/from master area. If it is floating (but not fixed) it will be toggled to the tiled state instead.
.TP
.B Mod1\-Button3
Resize current window while dragging. Tiled windows will be toggled to the floating state.
.TP
.B Button3 on root window
draws a rectangle to start a TERMINAL in it.
.SH CONFORMING TO
echinus is partially EWMH (NetWM) compliant, so you can use your favourite panel
or pager. Don't forget that pypanel (2.4) doesn't follows EWMH for its WM interaction.
.SH CUSTOMIZATION
Edit ~/.echinus/echinusrc
.SH SEE ALSO
.BR dmenu (1),\  dwm (1)
.SH BUGS
* parsekey() doesn't handle non-alphanumeric keysyms

* ifloating() performs badly

You should find lots of them. If you did please contact me, my mail is <polachok at gmail dot com>
